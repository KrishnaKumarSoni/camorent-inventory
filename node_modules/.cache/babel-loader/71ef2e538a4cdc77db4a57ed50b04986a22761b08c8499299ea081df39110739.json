{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Dev/camorent-inventory/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const login = async (email, password) => {\n    // Simulate authentication delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    // Simple validation - accept any email/password for demo\n    if (email && password) {\n      const userWithUid = {\n        id: 'demo-user',\n        email: email,\n        name: email.split('@')[0],\n        uid: 'demo-user'\n      };\n      setUser(userWithUid);\n      localStorage.setItem('user', JSON.stringify(userWithUid));\n    } else {\n      throw new Error('Please enter valid credentials');\n    }\n  };\n  const register = async (email, password) => {\n    // Simulate authentication delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    // Simple validation - accept any email/password for demo\n    if (email && password) {\n      const userWithUid = {\n        id: 'demo-user',\n        email: email,\n        name: email.split('@')[0],\n        uid: 'demo-user'\n      };\n      setUser(userWithUid);\n      localStorage.setItem('user', JSON.stringify(userWithUid));\n    } else {\n      throw new Error('Please enter valid credentials');\n    }\n  };\n  const logout = async () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  // Check for existing user session on app load\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        setUser(parsedUser);\n      } catch (error) {\n        console.error('Error parsing stored user:', error);\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout\n  };\n  console.log('AuthProvider render - loading:', loading, 'user:', user);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","login","email","password","Promise","resolve","setTimeout","userWithUid","id","name","split","uid","localStorage","setItem","JSON","stringify","register","logout","removeItem","storedUser","getItem","parsedUser","parse","error","console","value","log","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/Dev/camorent-inventory/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\ninterface SimpleUser {\n  id: string;\n  email: string;\n  name: string;\n  uid?: string; // For backwards compatibility\n}\n\ninterface AuthContextType {\n  user: SimpleUser | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<SimpleUser | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const login = async (email: string, password: string) => {\n    // Simulate authentication delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // Simple validation - accept any email/password for demo\n    if (email && password) {\n      const userWithUid = { \n        id: 'demo-user', \n        email: email, \n        name: email.split('@')[0], \n        uid: 'demo-user' \n      };\n      setUser(userWithUid);\n      localStorage.setItem('user', JSON.stringify(userWithUid));\n    } else {\n      throw new Error('Please enter valid credentials');\n    }\n  };\n\n  const register = async (email: string, password: string) => {\n    // Simulate authentication delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // Simple validation - accept any email/password for demo\n    if (email && password) {\n      const userWithUid = { \n        id: 'demo-user', \n        email: email, \n        name: email.split('@')[0], \n        uid: 'demo-user' \n      };\n      setUser(userWithUid);\n      localStorage.setItem('user', JSON.stringify(userWithUid));\n    } else {\n      throw new Error('Please enter valid credentials');\n    }\n  };\n\n  const logout = async () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  // Check for existing user session on app load\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        setUser(parsedUser);\n      } catch (error) {\n        console.error('Error parsing stored user:', error);\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n  \n  const value: AuthContextType = {\n    user,\n    loading,\n    login,\n    register,\n    logout\n  };\n\n  console.log('AuthProvider render - loading:', loading, 'user:', user);\n  \n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}