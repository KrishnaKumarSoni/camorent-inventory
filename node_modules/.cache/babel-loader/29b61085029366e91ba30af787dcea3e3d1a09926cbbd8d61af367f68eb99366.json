{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Dev/camorent-inventory/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  // Set mock user immediately to prevent login flash\n  const [user, setUser] = useState({\n    id: 'dev-user',\n    email: 'dev@example.com',\n    name: 'Dev User',\n    uid: 'dev-user'\n  });\n  const [loading, setLoading] = useState(false);\n  const login = async (email, password) => {\n    const response = await fetch('http://localhost:5000/api/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok && data.success) {\n      const userWithUid = {\n        ...data.user,\n        uid: data.user.id\n      };\n      setUser(userWithUid);\n      localStorage.setItem('user', JSON.stringify(userWithUid));\n    } else {\n      throw new Error(data.error || 'Login failed');\n    }\n  };\n  const register = async (email, password) => {\n    const response = await fetch('http://localhost:5000/api/auth/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok && data.success) {\n      const userWithUid = {\n        ...data.user,\n        uid: data.user.id\n      };\n      setUser(userWithUid);\n      localStorage.setItem('user', JSON.stringify(userWithUid));\n    } else {\n      throw new Error(data.error || 'Registration failed');\n    }\n  };\n  const logout = async () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  // Remove the useEffect that was causing the loading state\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout\n  };\n  console.log('AuthProvider render - loading:', loading, 'user:', user);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"fnRKipa8UrBFsMTBfT4age4v6UY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","id","email","name","uid","loading","setLoading","login","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","success","userWithUid","localStorage","setItem","error","register","logout","removeItem","value","console","log","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/Dev/camorent-inventory/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\ninterface SimpleUser {\n  id: string;\n  email: string;\n  name: string;\n  uid?: string; // For backwards compatibility\n}\n\ninterface AuthContextType {\n  user: SimpleUser | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  // Set mock user immediately to prevent login flash\n  const [user, setUser] = useState<SimpleUser | null>({\n    id: 'dev-user',\n    email: 'dev@example.com',\n    name: 'Dev User',\n    uid: 'dev-user'\n  });\n  const [loading, setLoading] = useState(false);\n\n  const login = async (email: string, password: string) => {\n    const response = await fetch('http://localhost:5000/api/auth/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email, password })\n    });\n    \n    const data = await response.json();\n    \n    if (response.ok && data.success) {\n      const userWithUid = { ...data.user, uid: data.user.id };\n      setUser(userWithUid);\n      localStorage.setItem('user', JSON.stringify(userWithUid));\n    } else {\n      throw new Error(data.error || 'Login failed');\n    }\n  };\n\n  const register = async (email: string, password: string) => {\n    const response = await fetch('http://localhost:5000/api/auth/register', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email, password })\n    });\n    \n    const data = await response.json();\n    \n    if (response.ok && data.success) {\n      const userWithUid = { ...data.user, uid: data.user.id };\n      setUser(userWithUid);\n      localStorage.setItem('user', JSON.stringify(userWithUid));\n    } else {\n      throw new Error(data.error || 'Registration failed');\n    }\n  };\n\n  const logout = async () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  // Remove the useEffect that was causing the loading state\n  \n  const value: AuthContextType = {\n    user,\n    loading,\n    login,\n    register,\n    logout\n  };\n\n  console.log('AuthProvider render - loading:', loading, 'user:', user);\n  \n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}